name: CMake on multiple platforms

on:
  push:
    branches: [ fix-action ]
  pull_request:
    branches: [ fix-action ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      
      fail-fast: false

      matrix:
        os: [ ubuntu-latest, windows-latest,macos-latest ]
        build_type: [ Release ]
        c_compiler: [ gcc, clang, cl ]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
            vcpkg_triplet: x64-windows-release
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            vcpkg_triplet: x64-linux-release
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++
            vcpkg_triplet: x64-osx-release
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl
          - os: ubuntu-latest
            c_compiler: clang
          - os: macos-latest
            c_compiler: cl
          - os: macos-latest
            c_compiler: gcc

    steps:
      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');
     
      - uses: actions/checkout@v3

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: vcpkg Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt install libxinerama-dev libxcursor-dev xorg-dev libglu1-mesa-dev pkg-config

      - name: vcpkg build
        uses: johnwason/vcpkg-action@v6
        id: vcpkg
        with:
          manifest-dir: ${{ github.workspace }}
          triplet: ${{ matrix.vcpkg_triplet }}
          cache-key: ${{ matrix.os }}
          revision: master
          token: ${{ github.token }}
          github-binarycache: true

      - name: Configure CMake
        run: >
          cmake ${{ steps.vcpkg.outputs.vcpkg-cmake-config }} -B ${{ steps.strings.outputs.build-output-dir }} -S .
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S ${{ github.workspace }}

      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

      - name: Test
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: ctest --build-config ${{ matrix.build_type }}
